#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
#################################################################
#---------------------------------------------------------------#
# Author: Marc Jongeneel                                        #
# Contact: marc@famjongeneel.nl                                 #
# License: GPL                                                  #
# File: bluecoat_healthchecks                                   #
# Version: 1.0                                                  #
# Revision: 19.12.2019                                          #
# Description: The health check is used to monitor changes in   #
# the health of upstream systems of a BlueCoat SG               #
#################################################################


# $ snmpwalk -v2c -c public BLUECOATSG.IP .1.3.6.1.4.1.3417.2.7.1.2.1.1
#.1.3.6.1.4.1.3417.2.7.1.2.1.1.1.97.117.116.104.46.103.111.111.103.108.101.46.99.111.109 auth.google.com
#.1.3.6.1.4.1.3417.2.7.1.2.1.1.1.102.119.100.46.103.111.111.103.108.101.46.99.111.109 fwd.google.com
#.1.3.6.1.4.1.3417.2.7.1.2.1.1.1.117.115.101.114.46.103.111.111.103.108.101.46.99.111.109 user.google.com
#.1.3.6.1.4.1.3417.2.7.1.2.1.1.2.97.117.116.104.46.103.111.111.103.108.101.46.99.111.109 2
#.1.3.6.1.4.1.3417.2.7.1.2.1.1.2.102.119.100.46.103.111.111.103.108.101.46.99.111.109 2
#.1.3.6.1.4.1.3417.2.7.1.2.1.1.2.117.115.101.114.46.103.111.111.103.108.101.46.99.111.109 2
#.1.3.6.1.4.1.3417.2.7.1.2.1.1.3.97.117.116.104.46.103.111.111.103.108.101.46.99.111.109 0
#.1.3.6.1.4.1.3417.2.7.1.2.1.1.3.102.119.100.46.103.111.111.103.108.101.46.99.111.109 1
#.1.3.6.1.4.1.3417.2.7.1.2.1.1.3.117.115.101.114.46.103.111.111.103.108.101.46.99.111.109 560


factory_settings["bluecoat_healthchecks_levels"] = {
    "unknown" : 3,
    "ok" : 0,
    "ok with errors" : 1,
    "ok for some IPs" : 1,
    "ok but failing" : 1,
    "check failed" : 2,
    "dns failed" : 2,
    "ok on alt server" : 1,
}

def inventory_bluecoat_healthchecks(info):
    return [( name, None )
             for name, state, duration, index in info
             if name]

def check_bluecoat_healthchecks(item, params, info):
    state_table = {
        "1" : "unknown",
        "2" : "ok",
        "3" : "ok with errors",
        "4" : "ok for some IPs",
        "5" : "ok but failing",
        "6" : "check failed",
        "7" : "dns failed",
        "8" : "ok on alt server",
    }

    for name, state, duration, index in info:
        if name == item:
            status = state_table[state]
            perfdata = [('duration', duration)]
            return params[status], "(%s) Duration: %s ms]" % (status, duration), perfdata

check_info["bluecoat_healthchecks"] = {
     "check_function"           : check_bluecoat_healthchecks,
     "has_perfdata"             : True,
     "group"                    : "bluecoat_healthchecks",
     "inventory_function"       : inventory_bluecoat_healthchecks,
     "service_description"      : "Health check %s",
     "default_levels_variable"  : "bluecoat_healthchecks_levels",
     "snmp_scan_function":      \
           lambda oid: '1.3.6.1.4.1.3417.1.1' in oid(".1.3.6.1.2.1.1.2.0"),
     "snmp_info"                : (".1.3.6.1.4.1.3417.2.7.1.2.1.1", [
           "1",  # BLUECOAT-SG-HEALTHCHECK-MIB::deviceHealthCheckName
           "2",  # BLUECOAT-SG-HEALTHCHECK-MIB::deviceHealthCheckState
           "3",  # BLUECOAT-SG-HEALTHCHECK-MIB::deviceHealthCheckDuration
           OID_END
     ], ),
}

### END
